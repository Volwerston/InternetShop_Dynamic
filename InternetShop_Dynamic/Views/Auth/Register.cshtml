@model InternetShop_Dynamic.Models.RegisterBindingModel
@using Newtonsoft.Json;

@{
    Layout = null;
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);

    List<string> errors = new List<string>();

    if (ViewData.ContainsKey("errors"))
    {
        errors = (List<string>)ViewData["errors"];
    }

    string toParse = JsonConvert.SerializeObject(errors);
    toParse.Replace("\'", "\\'");
    toParse.Replace("\"", "\\\"");
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-sm-4 col-sm-push-4" style="border: 1px solid grey; border-radius: 5px; background-color:lightgray; padding: 10px; margin-top: 25px;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", data_val = "true", data_val_required = "Name is required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", data_val = "true", data_val_required = "Surname is required" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", data_val = "true", data_val_required = "Email is required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", data_val = "true", data_val_required = "Password is required" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", data_val = "true", data_val_required = "Confirm Password is required" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="btn btn-block btn-success" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <input type="button" onclick='location.href="@Url.Action("Index", "Main")"' value="Main page" class="btn btn-block btn-info" />
                </div>
            </div>
        </div>
    }
    
    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            var resp = $("<div />").html('@toParse').text();
            var errors = JSON.parse(resp);

            for (let i = 0; i < errors.length; ++i) {
                alert(errors[i]);
            }

        });
    </script>
</body>
</html>
